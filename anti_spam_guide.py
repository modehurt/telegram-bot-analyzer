"""
–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é Telegram –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–∞–Ω–æ–≤
"""

class AntiSpamGuide:
    def __init__(self):
        self.account_limits = {
            "max_channels_per_account": 50,
            "max_requests_per_hour": 100,
            "max_requests_per_day": 1000,
            "max_posts_per_hour": 20,
            "max_posts_per_day": 200
        }
        
        self.warming_up_schedule = {
            "day_1": {"channels": 5, "posts": 10},
            "day_2": {"channels": 10, "posts": 20},
            "day_3": {"channels": 15, "posts": 30},
            "day_4": {"channels": 20, "posts": 40},
            "day_5": {"channels": 25, "posts": 50},
            "day_6": {"channels": 30, "posts": 60},
            "day_7": {"channels": 35, "posts": 70},
            "day_8": {"channels": 40, "posts": 80},
            "day_9": {"channels": 45, "posts": 90},
            "day_10": {"channels": 50, "posts": 100}
        }
    
    def get_account_management_tips(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏"""
        return """
üîí –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–ü–†–ê–í–õ–ï–ù–ò–Æ TELEGRAM –ê–ö–ö–ê–£–ù–¢–ê–ú–ò

üì± –ü–û–î–ì–û–¢–û–í–ö–ê –ê–ö–ö–ê–£–ù–¢–û–í:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
‚Ä¢ –ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π IP-–∞–¥—Ä–µ—Å
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä—ã
‚Ä¢ –ê–∫–∫–∞—É–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä—É—á–Ω—É—é

üî• –†–ê–ó–û–ì–†–ï–í –ê–ö–ö–ê–£–ù–¢–û–í (10 –¥–Ω–µ–π):
‚Ä¢ –î–µ–Ω—å 1: 5 –∫–∞–Ω–∞–ª–æ–≤, 10 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 2: 10 –∫–∞–Ω–∞–ª–æ–≤, 20 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 3: 15 –∫–∞–Ω–∞–ª–æ–≤, 30 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 4: 20 –∫–∞–Ω–∞–ª–æ–≤, 40 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 5: 25 –∫–∞–Ω–∞–ª–æ–≤, 50 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 6: 30 –∫–∞–Ω–∞–ª–æ–≤, 60 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 7: 35 –∫–∞–Ω–∞–ª–æ–≤, 70 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 8: 40 –∫–∞–Ω–∞–ª–æ–≤, 80 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 9: 45 –∫–∞–Ω–∞–ª–æ–≤, 90 –ø–æ—Å—Ç–æ–≤
‚Ä¢ –î–µ–Ω—å 10: 50 –∫–∞–Ω–∞–ª–æ–≤, 100 –ø–æ—Å—Ç–æ–≤

‚ö° –õ–ò–ú–ò–¢–´ –ù–ê –ê–ö–ö–ê–£–ù–¢:
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 50 –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 20 –ø–æ—Å—Ç–æ–≤ –≤ —á–∞—Å
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 200 –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å

üõ°Ô∏è –ê–ù–¢–ò–°–ü–ê–ú –ú–ï–†–´:
‚Ä¢ –î–µ–ª–∞–π—Ç–µ –ø–∞—É–∑—ã –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏ (5-10 —Å–µ–∫—É–Ω–¥)
‚Ä¢ –ù–µ –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –º–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤
‚Ä¢ –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –¥–µ–ª–∞–π—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—É–∑—ã (1-2 —á–∞—Å–∞)

üö® –ü–†–ò–ó–ù–ê–ö–ò –ë–õ–û–ö–ò–†–û–í–ö–ò:
‚Ä¢ –û—à–∏–±–∫–∞ "Too Many Requests"
‚Ä¢ –û—à–∏–±–∫–∞ "Flood Wait"
‚Ä¢ –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã
‚Ä¢ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π

üîÑ –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ê–ö–ö–ê–£–ù–¢–ê:
‚Ä¢ –ü—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —Å–¥–µ–ª–∞–π—Ç–µ –ø–∞—É–∑—É 24-48 —á–∞—Å–æ–≤
‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π –≤ 2 —Ä–∞–∑–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π IP-–∞–¥—Ä–µ—Å
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –Ω–∞—Ä—É—à–µ–Ω—ã –ª–∏ –ø—Ä–∞–≤–∏–ª–∞ Telegram

üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
‚Ä¢ –í–µ–¥–∏—Ç–µ –ª–æ–≥ –≤—Å–µ—Ö –¥–µ–π—Å—Ç–≤–∏–π
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –æ—à–∏–±–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–º–µ—á–∞–π—Ç–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
"""
    
    def get_proxy_recommendations(self) -> str:
        """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–æ–∫—Å–∏"""
        return """
üåê –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ü–†–û–ö–°–ò

üìã –¢–ò–ü–´ –ü–†–û–ö–°–ò:
‚Ä¢ HTTP/HTTPS –ø—Ä–æ–∫—Å–∏ - –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
‚Ä¢ SOCKS5 –ø—Ä–æ–∫—Å–∏ - –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
‚Ä¢ Residential –ø—Ä–æ–∫—Å–∏ - –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

üîß –ù–ê–°–¢–†–û–ô–ö–ê –ü–†–û–ö–°–ò:
‚Ä¢ –ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π IP
‚Ä¢ –ü—Ä–æ–∫—Å–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–æ—Ç–∞—Ü–∏—è IP-–∞–¥—Ä–µ—Å–æ–≤
‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–∫—Å–∏

üí∞ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –ü–†–û–ö–°–ò:
‚Ä¢ Bright Data (–±—ã–≤—à–∏–π Luminati)
‚Ä¢ Oxylabs
‚Ä¢ Smartproxy
‚Ä¢ IPRoyal
‚Ä¢ ProxyMesh

‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ê –í PYROGRAM:
```python
client = Client(
    "session_name",
    api_id=API_ID,
    api_hash=API_HASH,
    proxy=dict(
        scheme="http",
        hostname="proxy_host",
        port=8080,
        username="proxy_user",
        password="proxy_pass"
    )
)
```

‚ö†Ô∏è –í–ê–ñ–ù–´–ï –ú–û–ú–ï–ù–¢–´:
‚Ä¢ –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–æ–∫—Å–∏
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –º–µ–Ω—è–π—Ç–µ IP-–∞–¥—Ä–µ—Å–∞
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∫—Å–∏
‚Ä¢ –ò–º–µ–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –ø—Ä–æ–∫—Å–∏
"""
    
    def get_warming_up_plan(self, day: int) -> Dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–∞–Ω —Ä–∞–∑–æ–≥—Ä–µ–≤–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–Ω—è"""
        if day > 10:
            day = 10
        
        return self.warming_up_schedule[f"day_{day}"]
    
    def check_account_health(self, account_data: Dict) -> Dict:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ –∞–∫–∫–∞—É–Ω—Ç–∞"""
        health_score = 100
        warnings = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤
        if account_data.get("total_channels", 0) > self.account_limits["max_channels_per_account"]:
            health_score -= 20
            warnings.append("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ —á–∞—Å
        if account_data.get("requests_last_hour", 0) > self.account_limits["max_requests_per_hour"]:
            health_score -= 30
            warnings.append("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ —á–∞—Å")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –¥–µ–Ω—å
        if account_data.get("requests_last_day", 0) > self.account_limits["max_requests_per_day"]:
            health_score -= 40
            warnings.append("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –¥–µ–Ω—å")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞
        if account_data.get("status") == "Banned":
            health_score = 0
            warnings.append("–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        elif account_data.get("status") == "Error":
            health_score -= 50
            warnings.append("–ê–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç –æ—à–∏–±–∫–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        last_used = account_data.get("last_used_at")
        if last_used:
            hours_since_last_use = (datetime.datetime.utcnow() - last_used).total_seconds() / 3600
            if hours_since_last_use > 24:
                health_score -= 10
                warnings.append("–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤")
        
        return {
            "health_score": max(0, health_score),
            "status": "Healthy" if health_score >= 70 else "Warning" if health_score >= 40 else "Critical",
            "warnings": warnings,
            "recommendations": self.get_account_recommendations(health_score)
        }
    
    def get_account_recommendations(self, health_score: int) -> List[str]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞"""
        recommendations = []
        
        if health_score < 30:
            recommendations.extend([
                "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞",
                "–°–¥–µ–ª–∞–π—Ç–µ –ø–∞—É–∑—É –Ω–∞ 24-48 —á–∞—Å–æ–≤",
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ª–∏ –∞–∫–∫–∞—É–Ω—Ç",
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π IP-–∞–¥—Ä–µ—Å"
            ])
        elif health_score < 70:
            recommendations.extend([
                "–£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–π—Å—Ç–≤–∏–π",
                "–£–≤–µ–ª–∏—á—å—Ç–µ –ø–∞—É–∑—ã –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏",
                "–ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –±–æ–ª–µ–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ",
                "–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç"
            ])
        else:
            recommendations.extend([
                "–ê–∫–∫–∞—É–Ω—Ç –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏",
                "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                "–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å"
            ])
        
        return recommendations
    
    def get_action_delays(self) -> Dict:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –¥–µ–π—Å—Ç–≤–∏—è–º–∏"""
        return {
            "subscribe_to_channel": 5,  # —Å–µ–∫—É–Ω–¥
            "get_chat_history": 3,
            "send_message": 10,
            "join_chat": 8,
            "leave_chat": 5,
            "get_chat_members": 15,
            "download_media": 2,
            "get_me": 1
        }
    
    def get_error_handling_strategy(self, error_type: str) -> Dict:
        """–°—Ç—Ä–∞—Ç–µ–≥–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫"""
        strategies = {
            "TooManyRequests": {
                "wait_time": 3600,  # 1 —á–∞—Å
                "action": "pause_account",
                "message": "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–∞—É–∑–∞ 1 —á–∞—Å."
            },
            "FloodWait": {
                "wait_time": 7200,  # 2 —á–∞—Å–∞
                "action": "pause_account",
                "message": "Flood Wait. –ü–∞—É–∑–∞ 2 —á–∞—Å–∞."
            },
            "UserBanned": {
                "wait_time": 86400,  # 24 —á–∞—Å–∞
                "action": "mark_banned",
                "message": "–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ."
            },
            "ChannelPrivate": {
                "wait_time": 300,  # 5 –º–∏–Ω—É—Ç
                "action": "skip_channel",
                "message": "–ö–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–π. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
            },
            "ChatNotFound": {
                "wait_time": 60,  # 1 –º–∏–Ω—É—Ç–∞
                "action": "skip_channel",
                "message": "–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º."
            }
        }
        
        return strategies.get(error_type, {
            "wait_time": 300,
            "action": "retry",
            "message": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç."
        })

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∞–Ω—Ç–∏—Å–ø–∞–º –≥–∏–¥–∞
anti_spam_guide = AntiSpamGuide() 